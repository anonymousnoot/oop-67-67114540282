import streamlit as st
from ollama import chat
from langdetect import detect
import time
import json

# ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ä‡∏ó‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå JSON
def save_chat_history():
    with open("chat_history.json", "w", encoding="utf-8") as f:
        json.dump(st.session_state.messages, f, ensure_ascii=False, indent=4)

# ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ä‡∏ó‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
def load_chat_history():
    try:
        with open("chat_history.json", "r", encoding="utf-8") as f:
            st.session_state.messages = json.load(f)
    except FileNotFoundError:
        st.session_state.messages = []

# ‡πÇ‡∏´‡∏•‡∏î‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ä‡∏ó‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
load_chat_history()

st.set_page_config(page_title="AI Chatbot", page_icon="üß†", layout="wide")
# ---------------- SESSION STATE ---------------- #
if "messages" not in st.session_state:
    st.session_state.messages = []
if "authenticated" not in st.session_state:
    st.session_state.authenticated = False
if "users" not in st.session_state:
    st.session_state.users = {"asia": "12345"}  # ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
if "username" not in st.session_state:
    st.session_state.username = None  # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô

# ---------------- SIDEBAR ---------------- #
if st.session_state.authenticated:
    with st.sidebar:
        st.title("Settings")
        model_name = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ", ["llama3", "mistral"], index=0)

        if st.button("‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏ä‡∏ó"):
            st.session_state.messages = []  # ‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏ä‡∏ó‡πÉ‡∏ô session
            with open("chat_history.json", "w", encoding="utf-8") as f:
                json.dump([], f, ensure_ascii=False, indent=4)  # ‡∏•‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ä‡∏ó
            st.rerun()

        if st.button("‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö"):
            st.session_state.authenticated = False
            st.session_state.username = None  # üîπ ‡∏•‡πâ‡∏≤‡∏á Username ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Session State
            st.rerun()

# ---------------- MAIN CONTENT ---------------- #
if not st.session_state.authenticated:
    col1, col2, col3 = st.columns([1, 2, 1])  # 1:1:1 ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á
    with col2:
        st.markdown("""
            <div style='text-align: center; font-size: 25px; font-weight: bold; color: #3a3a3a;'>
                 ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Chatbot
            </div>
            <div style='text-align: center; font-size: 18px; color: #7a7a7a;'>
                ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
            </div>
        """, unsafe_allow_html=True)

        tab1, tab2 = st.tabs([" Login", " Register"])

        with tab1:
            with st.form(key='login_form'):
                username = st.text_input('Username')
                password = st.text_input('Password', type='password')
                login_button = st.form_submit_button(" Login")

            if login_button:
                if username in st.session_state.users and st.session_state.users[username] == password:
                    st.session_state.authenticated = True
                    st.session_state.username = username  # üîπ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Username ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÑ‡∏ß‡πâ
                    st.success(f"‚úÖ Login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö {username}")
                    time.sleep(1)
                    st.rerun()
                else:
                    st.error("‚ùå Username ‡∏´‡∏£‡∏∑‡∏≠ Password ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")


        with tab2:
            with st.form(key='register_form'):
                new_username = st.text_input('‡∏™‡∏£‡πâ‡∏≤‡∏á Username')
                new_password = st.text_input('‡∏™‡∏£‡πâ‡∏≤‡∏á Password', type='password')
                confirm_password = st.text_input('‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô Password', type='password')
                register_button = st.form_submit_button(" Register")

            if register_button:
                if new_username in st.session_state.users:
                    st.error("‚ùå Username ‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∑‡πà‡∏ô")
                elif new_password != confirm_password:
                    st.error("‚ùå Password ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
                elif len(new_username) < 3 or len(new_password) < 5:
                    st.error("‚ùå Username ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 3 ‡∏ï‡∏±‡∏ß ‡πÅ‡∏•‡∏∞ Password ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 5 ‡∏ï‡∏±‡∏ß")
                else:
                    st.session_state.users[new_username] = new_password
                    st.success("‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤ Login")
                    time.sleep(1)
                    st.rerun()

else:
    # ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß
    st.title("AI Chatbot")
    st.subheader(f"‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö {st.session_state.username}!")

    # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô session_state
    for msg in st.session_state.messages:
        with st.chat_message(msg["role"]):
            st.write(msg["content"])

    # ‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    user_message = st.chat_input("‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà...")
    if user_message:
        st.session_state.messages.append({'role': 'user', 'content': user_message})

        with st.chat_message("user"):
            st.write(user_message)

        # ‡πÅ‡∏™‡∏î‡∏á loading indicator
        with st.spinner("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏¥‡∏î..."):
            time.sleep(1)

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤
        try:
            user_lang = detect(user_message)
        except:
            user_lang = "en"

        if user_lang == "th":
            system_prompt = "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ó‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ ‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ AI mistral ‡πÅ‡∏•‡∏∞ llama3 ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ ‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ 100% ‡∏´‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡πÅ‡∏•‡∏∞‡∏´‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡πÉ‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏ô‡∏±‡πâ‡∏ô"
        else:
            system_prompt = f"You are a chatbot. Respond in {user_lang}."

        messages = [{"role": "system", "content": system_prompt}] + st.session_state.messages
        messages.append({"role": "user", "content": user_message})

        # ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å AI
        with st.chat_message("assistant"):
            response_container = st.empty()
            full_response = ""

            for chunk in chat(model=model_name, messages=messages, stream=True):
                full_response += chunk["message"]["content"]
                response_container.markdown(full_response + "‚ñå")

            response_container.markdown(full_response)

        st.session_state.messages.append({"role": "assistant", "content": full_response})
        save_chat_history()
